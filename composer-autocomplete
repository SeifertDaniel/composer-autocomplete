function _composer_scripts() {
    local cmd commands cur ref subcmd;
    _get_comp_words_by_ref -n : cur

    COMPREPLY=()
    cmd="${COMP_WORDS[0]/#\~/$HOME}"
    subcmd="${COMP_WORDS[0]}"
    commands=$("$cmd" --no-ansi 2> /dev/null | sed '/script as defined in composer.json./d' | awk '/^ +[a-z]+/ { printf "%s ",$1 }')

    ref=" ${commands[@]} "
    for w in ${COMP_WORDS[@]}; do
        if [[ " $ref " =~ " $w " ]]; then
            subcmd=$w
            break
        fi
    done

    #
    # Complete the arguments to some of the commands.
    #
    if [ "$subcmd" != "${COMP_WORDS[0]}" ] ; then
        local opts=$("$cmd" "$subcmd" -h --no-ansi 2> /dev/null | tr -cs '[=-=][:alpha:]_' '[\n*]' | grep '^-')
        # Complete scripts for composer "run-script" command.
        if [ "$subcmd" == "run-script" ] ; then
            local scripts=$("$cmd" --no-ansi 2> /dev/null | grep 'script as defined in composer.json' | awk '/^ +[a-z]+/ { print $1 }')
        fi
        COMPREPLY=( $(compgen -W "${opts} ${scripts}" -- ${cur}) )
        return 0
    fi


    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-h -q -v -V -n -d \
            --help --quiet --verbose --version --ansi --no-ansi \
            --no-interaction --profile --no-plugins --working-dir' -- "$cur" ) )
    else
        COMPREPLY=( $(compgen -W "${commands}" -- ${cur}) )
    fi

    return 0
}

complete -F _composer_scripts composer composer.phar
